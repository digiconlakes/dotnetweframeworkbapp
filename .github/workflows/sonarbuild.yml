name: Build
on:
#  push:
#    branches:
#      - master
  pull_request:
    types: [opened, synchronize, reopened]


jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11   

      - uses: microsoft/setup-msbuild@v1
      
      - name: Restore NuGet packages
        run: |
          nuget restore WebApplication.sln

      
      - name: Begin Sonar scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"digiconlakes_dotnetweframeworkbapp" /o:"digiconlakes" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          
      - name: Build IdentityServer and run unit tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          MSBuild.exe WebApplication\WebApplication.csproj /t:Rebuild 

      - name: Sonarqube end
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


Core
on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
#  push:
#    branches:
#      - master
  pull_request:
      types: [opened, synchronize, reopened]
name: Main Workflow
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          # Disabling shallow clone is recommended for improving relevancy of sonarqube reporting
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Sonarqube Begin
        run: | 
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"KanaiyaKatarmal_samplesonar" /o:"kanaiyakatarmal" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          
      - name: Build
        run: dotnet build


      - name: Sonarqube end
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}